{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\src\\\\pages\\\\StatisticsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getAllShortUrls, getStats, simulateClick } from '../services/api';\nimport StatisticsTable from '../components/StatisticsTable';\nimport Logger from '../services/logger';\nimport { Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StatisticsPage() {\n  _s();\n  const [stats, setStats] = useState([]);\n  const fetchStats = async () => {\n    try {\n      const urls = await getAllShortUrls();\n      const statsData = await Promise.all(urls.map(async u => {\n        return await getStats(u.shortcode);\n      }));\n      setStats(statsData);\n      Logger.info('Statistics loaded', {\n        count: statsData.length\n      });\n    } catch (err) {\n      Logger.error('Stats fetch failed', {\n        err\n      });\n    }\n  };\n  useEffect(() => {\n    fetchStats();\n  }, []);\n\n  // For demo: simulate a click on first URL\n  const handleSimulateClick = () => {\n    if (stats.length) {\n      simulateClick(stats[0].shortcode, 'https://referrer.example', 'USA');\n      fetchStats();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      sx: {\n        mb: 2\n      },\n      onClick: handleSimulateClick,\n      children: \"Simulate Click (Demo)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsTable, {\n      stats: stats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(StatisticsPage, \"0S3Drn52W0byrmqqk5yWjZ/TY+E=\");\n_c = StatisticsPage;\nvar _c;\n$RefreshReg$(_c, \"StatisticsPage\");","map":{"version":3,"names":["React","useEffect","useState","getAllShortUrls","getStats","simulateClick","StatisticsTable","Logger","Button","jsxDEV","_jsxDEV","StatisticsPage","_s","stats","setStats","fetchStats","urls","statsData","Promise","all","map","u","shortcode","info","count","length","err","error","handleSimulateClick","children","variant","sx","mb","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/New folder/src/pages/StatisticsPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getAllShortUrls, getStats, simulateClick } from '../services/api';\r\nimport StatisticsTable from '../components/StatisticsTable';\r\nimport Logger from '../services/logger';\r\nimport { Button } from '@mui/material';\r\n\r\nexport default function StatisticsPage() {\r\n  const [stats, setStats] = useState([]);\r\n\r\n  const fetchStats = async () => {\r\n    try {\r\n      const urls = await getAllShortUrls();\r\n      const statsData = await Promise.all(urls.map(async u => {\r\n        return await getStats(u.shortcode);\r\n      }));\r\n      setStats(statsData);\r\n      Logger.info('Statistics loaded', { count: statsData.length });\r\n    } catch (err) {\r\n      Logger.error('Stats fetch failed', { err });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchStats();\r\n  }, []);\r\n\r\n  // For demo: simulate a click on first URL\r\n  const handleSimulateClick = () => {\r\n    if (stats.length) {\r\n      simulateClick(stats[0].shortcode, 'https://referrer.example', 'USA');\r\n      fetchStats();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" sx={{ mb: 2 }} onClick={handleSimulateClick}>\r\n        Simulate Click (Demo)\r\n      </Button>\r\n      <StatisticsTable stats={stats} />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,QAAQ,EAAEC,aAAa,QAAQ,iBAAiB;AAC1E,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMb,eAAe,CAAC,CAAC;MACpC,MAAMc,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,GAAG,CAAC,MAAMC,CAAC,IAAI;QACtD,OAAO,MAAMjB,QAAQ,CAACiB,CAAC,CAACC,SAAS,CAAC;MACpC,CAAC,CAAC,CAAC;MACHR,QAAQ,CAACG,SAAS,CAAC;MACnBV,MAAM,CAACgB,IAAI,CAAC,mBAAmB,EAAE;QAAEC,KAAK,EAAEP,SAAS,CAACQ;MAAO,CAAC,CAAC;IAC/D,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZnB,MAAM,CAACoB,KAAK,CAAC,oBAAoB,EAAE;QAAED;MAAI,CAAC,CAAC;IAC7C;EACF,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACdc,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMa,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIf,KAAK,CAACY,MAAM,EAAE;MAChBpB,aAAa,CAACQ,KAAK,CAAC,CAAC,CAAC,CAACS,SAAS,EAAE,0BAA0B,EAAE,KAAK,CAAC;MACpEP,UAAU,CAAC,CAAC;IACd;EACF,CAAC;EAED,oBACEL,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACF,MAAM;MAACsB,OAAO,EAAC,UAAU;MAACC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAACC,OAAO,EAAEL,mBAAoB;MAAAC,QAAA,EAAC;IAExE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT3B,OAAA,CAACJ,eAAe;MAACO,KAAK,EAAEA;IAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV;AAACzB,EAAA,CApCuBD,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}